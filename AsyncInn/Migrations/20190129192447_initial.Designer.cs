// <auto-generated />
using AsyncInn.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AsyncInn.Migrations
{
    [DbContext(typeof(AsyncInnDbContext))]
    [Migration("20190129192447_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AsyncInn.Models.Amenity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.HasKey("ID");

                    b.ToTable("Amenity");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "coffee maker"
                        },
                        new
                        {
                            ID = 2,
                            Description = "mini bar"
                        },
                        new
                        {
                            ID = 3,
                            Description = "refrigerator"
                        },
                        new
                        {
                            ID = 4,
                            Description = "air conditioning"
                        },
                        new
                        {
                            ID = 5,
                            Description = "charging station"
                        });
                });

            modelBuilder.Entity("AsyncInn.Models.Hotel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<int>("Country");

                    b.Property<string>("Name");

                    b.Property<long>("Phone");

                    b.Property<int>("State");

                    b.HasKey("ID");

                    b.ToTable("Hotel");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "100 Main St",
                            City = "Austin",
                            Country = 0,
                            Name = "Hotel AAA",
                            Phone = 1112222L,
                            State = 44
                        },
                        new
                        {
                            ID = 2,
                            Address = "200 Main St",
                            City = "Birmingham",
                            Country = 0,
                            Name = "Hotel BBB",
                            Phone = 1112223333L,
                            State = 1
                        },
                        new
                        {
                            ID = 3,
                            Address = "300 Main St",
                            City = "Cancun",
                            Country = 2,
                            Name = "Hotel CCC",
                            Phone = 1112221111L,
                            State = 0
                        },
                        new
                        {
                            ID = 4,
                            Address = "400 Main St",
                            City = "Vancouver",
                            Country = 1,
                            Name = "Hotel DDD",
                            Phone = 2223332222L,
                            State = 0
                        },
                        new
                        {
                            ID = 5,
                            Address = "500 Main St",
                            City = "Toronto",
                            Country = 1,
                            Name = "Hotel EEE",
                            Phone = 3334443333L,
                            State = 0
                        });
                });

            modelBuilder.Entity("AsyncInn.Models.Inventory", b =>
                {
                    b.Property<int>("HotelID");

                    b.Property<int>("RoomNumber");

                    b.Property<bool>("PetsOK");

                    b.Property<decimal>("Rate");

                    b.Property<int>("RoomPlanID");

                    b.HasKey("HotelID", "RoomNumber");

                    b.HasIndex("RoomPlanID");

                    b.ToTable("Inventory");
                });

            modelBuilder.Entity("AsyncInn.Models.RoomConfig", b =>
                {
                    b.Property<int>("RoomPlanID");

                    b.Property<int>("AmenityID");

                    b.HasKey("RoomPlanID", "AmenityID");

                    b.HasIndex("AmenityID");

                    b.ToTable("RoomConfig");
                });

            modelBuilder.Entity("AsyncInn.Models.RoomPlan", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Layout");

                    b.Property<string>("RoomType");

                    b.HasKey("ID");

                    b.ToTable("RoomPlan");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Layout = 0,
                            RoomType = "Studio A"
                        },
                        new
                        {
                            ID = 2,
                            Layout = 0,
                            RoomType = "Studio B"
                        },
                        new
                        {
                            ID = 3,
                            Layout = 1,
                            RoomType = "One Bedroom A"
                        },
                        new
                        {
                            ID = 4,
                            Layout = 1,
                            RoomType = "One Bedroom B"
                        },
                        new
                        {
                            ID = 5,
                            Layout = 2,
                            RoomType = "Two Bedroom A"
                        },
                        new
                        {
                            ID = 6,
                            Layout = 2,
                            RoomType = "Two Bedroom B"
                        });
                });

            modelBuilder.Entity("AsyncInn.Models.Inventory", b =>
                {
                    b.HasOne("AsyncInn.Models.Hotel", "Hotel")
                        .WithMany("HotelInventory")
                        .HasForeignKey("HotelID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AsyncInn.Models.RoomPlan", "RoomPlan")
                        .WithMany()
                        .HasForeignKey("RoomPlanID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AsyncInn.Models.RoomConfig", b =>
                {
                    b.HasOne("AsyncInn.Models.Amenity", "Amenity")
                        .WithMany()
                        .HasForeignKey("AmenityID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AsyncInn.Models.RoomPlan", "RoomPlan")
                        .WithMany("RoomConfigGroup")
                        .HasForeignKey("RoomPlanID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
